{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","categori","ReactDOM","render","document","getElementById"],"mappings":"4LAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACQ,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAIbC,EAJa,iDAImCC,UAAUH,GAJ7C,+DAKAI,MAAMF,GALN,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KACDC,EAAQD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAcZM,GAdY,4CAAH,sDCAXO,EAAc,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MAC7B,OACI,sBAAKI,UAAY,0CAAjB,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECLwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CACTf,KAAKkB,EACLL,SAAQ,SAMrB,CAACpB,IAGGqB,EDjBuBK,CAAa1B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAGnB,OACI,qCACI,oBAAIJ,UAAY,oCAAhB,SAAqDhB,IAEpDoB,GAAW,mBAAGJ,UAAY,mCAAf,wBACZ,qBAAKA,UAAY,YAAjB,SAIYH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEO3BgB,EAxBM,WAEjB,MAAoCzC,mBAAS,CAAC,aAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAIA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BACK2C,EAAWnB,KAAI,SAACoB,GAAD,OAER,cAAC,EAAD,CAA0B7B,SAAW6B,GAArBA,YCdxCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.53e640f1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport '../index.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (        \r\n            <form onSubmit = {handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value= {inputValue}\r\n                    onChange = {handleInputChange}\r\n                />\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes= {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n    export const getGifs = async(category) =>{\r\n\r\n        \r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=hW2R9BDy3JFhqMFJMwj4gVrlzBqJQWJw`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n        const gifs =  data.map(img =>{\r\n            return {\r\n                id:img.id,\r\n                title:img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        return gifs;\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({url,title}) => {\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn \">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n import { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className = \"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className = \"animate__animated animate__flash\">Loading...</p> }\r\n            <div className = \"card-grid\">\r\n            \r\n                \r\n                {\r\n                        images.map((img) =>(\r\n                            <GifGridItem \r\n                                key= {img.id}\r\n                                {...img}\r\n                            />\r\n                            \r\n                        ))\r\n                } \r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(()=>{\r\n        \r\n        getGifs(category)\r\n            .then(imgs => {\r\n                    setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n \r\n            })\r\n\r\n\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    const [categories, setCategories] = useState(['Gallardo'])\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {categories.map((categori) => (\r\n\r\n                        <GifGrid key = {categori} category= {categori}/>\r\n                    \r\n                    )\r\n                )}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}